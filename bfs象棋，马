from collections import deque
sx,sy = map(int,input().split())
ex,ey = map(int,input().split())
blocks = set()
for _ in range(int(input())):
    blocks.add(tuple(map(int,input().split())))
dx = [-2,-2,-1,1,2,2,1,-1]
dy = [1,-1,-2,-2,1,-1,2,2]
q = deque()
q.append((sx,sy,f"({sx},{sy})"))
#查重
inQ = set()
inQ.add((sx,sy))
ans = 0
cur_path = ''
while q:
    tmp = deque()
    while q:
        x,y,path = q.popleft()
        wx,wy = [-1,0,1,0],[0,-1,0,1]
        if x == ex and y == ey:
            ans+=1
            if ans == 1:
                cur_path = path
        for i in range(8):
            nx,ny = x+dx[i],y+dy[i]
            hx,hy = x+wx[i//2],y+wy[i//2]
            if (nx,ny) != (sx,sy) and (hx,hy) not in blocks and 0<=nx<=10 and 0<=ny<=10:
                tmp.append((nx,ny,path+f"-({nx},{ny})"))

    if ans:
        break
    q=tmp
print(cur_path if ans == 1 else ans)
